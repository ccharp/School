#include <iostream>
#include <cstdlib>
#include <fstream>
#include "DisjointSets.h"

using namespace std;

DisjointSets::DisjointSets( int n )
{
	parent = new int[n];
	size = n;
	for( int i = 0; i < size; i++ )
	{
		parent[i] = -1;
	}
}

DisjointSets::~DisjointSets()
{
	delete parent; 
}

bool DisjointSets::isRoot( int x )
{
	return parent[x] < 0;
}

void DisjointSets::print()
{
	for( int i = 0; i < size; i++ )
	{
		printf( "%4d", parent[i] );
	}
	std::cout << endl;
	for( int i = 0; i < size; i++ )
	{
		printf("%4d", i);
	}
	std::cout << endl;
}

int DisjointSets::find( int x )
{
	if( isRoot( x ) )
	{
		return x;
	}

	return find( parent[x] );
}

void DisjointSets::merge( int x, int y )
{

}

